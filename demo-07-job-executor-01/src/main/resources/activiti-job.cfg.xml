<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="processEngineConfiguration"
          class="org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration">

        <property name="enableVerboseExecutionTreeLogging" value="false" />
        <!-- 开启异步执行器 -->
        <property name="asyncExecutorActivate" value="true"/>
        <!-- 异步执行器的自定义实现类的配置 -->
        <property name="asyncExecutor" ref="asyncExecutor" />
        <!-- 配置自定义监听器 -->
        <property name="eventListeners">
            <list>
                <bean class="com.suyh.event.JobEventListener"/>
            </list>
        </property>
    </bean>

    <!-- 这里可以配置自定义实现的线程池，此处使用的默认的 -->
    <bean id="asyncExecutor" class="org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor">
        <property name="executorService" ref="executorService"/>
    </bean>

    <!-- 线程池的基础属性的配置 -->
    <bean id="executorService" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <!-- 线程名的前缀 -->
        <property name="threadNamePrefix" value="activiti-job-"/>
        <!-- 核心线程数 -->
        <property name="corePoolSize" value="5" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="20"/>
        <!-- 队列数量 -->
        <property name="queueCapacity" value="100"/>
        <!-- 拒绝策略 -->
        <property name="rejectedExecutionHandler">
            <!-- 自定义的拒绝策略，此处使用了基础的异常处理 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy"/>
        </property>
    </bean>
</beans>